{
  "address": "0xCB0536Db7620AE44CB804f839CDdE1c13E9D319a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractTest",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "BuyBackEnabledUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardLiquidityProviders",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensSwapped",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethReceived",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIntoLiqudity",
          "type": "uint256"
        }
      ],
      "name": "SwapAndLiquify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "SwapAndLiquifyEnabledUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "SwapETHForTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "SwapTokensForETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyBackUpperLimit",
          "type": "uint256"
        }
      ],
      "name": "onBuybackUpperLimitUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_developmentAddress",
          "type": "address"
        }
      ],
      "name": "onDevelopmentAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "divisor",
          "type": "uint256"
        }
      ],
      "name": "onDevelopmentDivisorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidityFee",
          "type": "uint256"
        }
      ],
      "name": "onLiquidityFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTxAmount",
          "type": "uint256"
        }
      ],
      "name": "onMaxTxAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_minimumTokensBeforeSwap",
          "type": "uint256"
        }
      ],
      "name": "onNumTokensSellToAddToLiquidityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_rewardAddress",
          "type": "address"
        }
      ],
      "name": "onRewardAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "divisor",
          "type": "uint256"
        }
      ],
      "name": "onRewardDivisorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "onTaxFeeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BP",
      "outputs": [
        {
          "internalType": "contract BPContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BPDisabledForever",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_LIQUIDITY_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TAX_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newEnabledAddLiquidityAddress",
          "type": "address"
        }
      ],
      "name": "SetEnabledAddLiquidityAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_enabledAddLiquidityAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_liquidityFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_maxTxAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_taxFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "afterPreSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bpEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBackEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBackUpperLimitAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deadAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tAmount",
          "type": "uint256"
        }
      ],
      "name": "deliver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developmentAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developmentDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "excludeFromFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "excludeFromReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "includeInFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "includeInReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isExcludedFromFee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isExcludedFromReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumTokensBeforeSwapAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prepareForPreSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "deductTransferFee",
          "type": "bool"
        }
      ],
      "name": "reflectionFromToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bp",
          "type": "address"
        }
      ],
      "name": "setBPAddrss",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setBotProtectionDisableForever",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "setBpEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "setBuyBackEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "buyBackLimit",
          "type": "uint256"
        }
      ],
      "name": "setBuybackUpperLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_developmentAddress",
          "type": "address"
        }
      ],
      "name": "setDevelopmentAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "divisor",
          "type": "uint256"
        }
      ],
      "name": "setDevelopmentDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidityFee",
          "type": "uint256"
        }
      ],
      "name": "setLiquidityFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "percent",
          "type": "uint256"
        }
      ],
      "name": "setMaxTxAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumTokensBeforeSwap",
          "type": "uint256"
        }
      ],
      "name": "setNumTokensSellToAddToLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardAddress",
          "type": "address"
        }
      ],
      "name": "setRewardAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "divisor",
          "type": "uint256"
        }
      ],
      "name": "setRewardDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "name": "setSwapAndLiquifyEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "taxFee",
          "type": "uint256"
        }
      ],
      "name": "setTaxFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapAndLiquifyEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rAmount",
          "type": "uint256"
        }
      ],
      "name": "tokenFromReflection",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x753973586b7335fec2bf4c0c5a751df7db243b8da60c8a6139114acf2d30c003",
  "receipt": {
    "to": null,
    "from": "0x153c55C7dE2697AC2EEa969fcc952e2e2b43762f",
    "contractAddress": "0xCB0536Db7620AE44CB804f839CDdE1c13E9D319a",
    "transactionIndex": 3,
    "gasUsed": "7109553",
    "logsBloom": "0x00000000000400000000000000000000008000000000012000800000000000040000000000040010000000000000000000000000000000000000000000200000000000000000000000000008000004000011000000000000000000000000000000000000020000000000000000000800000000020000000000000010000000400000000000000000000000000000000000080000000000000000080000000000020000080800000000000000000000000000000000000000000000000000000000000002000000000000002000000040000020000000000000000000000021000010000000000c00080000000000000000000000000000000000000000000000",
    "blockHash": "0xfd2dff54cc897311b8b60db4761896f893c8764f3cf4f09e3f114eb7ed389375",
    "transactionHash": "0x753973586b7335fec2bf4c0c5a751df7db243b8da60c8a6139114acf2d30c003",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 16887480,
        "transactionHash": "0x753973586b7335fec2bf4c0c5a751df7db243b8da60c8a6139114acf2d30c003",
        "address": "0xCB0536Db7620AE44CB804f839CDdE1c13E9D319a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000153c55c7de2697ac2eea969fcc952e2e2b43762f"
        ],
        "data": "0x",
        "logIndex": 7,
        "blockHash": "0xfd2dff54cc897311b8b60db4761896f893c8764f3cf4f09e3f114eb7ed389375"
      },
      {
        "transactionIndex": 3,
        "blockNumber": 16887480,
        "transactionHash": "0x753973586b7335fec2bf4c0c5a751df7db243b8da60c8a6139114acf2d30c003",
        "address": "0xB7926C0430Afb07AA7DEfDE6DA862aE0Bde767bc",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd",
          "0x000000000000000000000000cb0536db7620ae44cb804f839cdde1c13e9d319a"
        ],
        "data": "0x000000000000000000000000e223e0ee65f737fb1f68c28b95ccce84b7be0cf6000000000000000000000000000000000000000000000000000000000001eb1d",
        "logIndex": 8,
        "blockHash": "0xfd2dff54cc897311b8b60db4761896f893c8764f3cf4f09e3f114eb7ed389375"
      },
      {
        "transactionIndex": 3,
        "blockNumber": 16887480,
        "transactionHash": "0x753973586b7335fec2bf4c0c5a751df7db243b8da60c8a6139114acf2d30c003",
        "address": "0xCB0536Db7620AE44CB804f839CDdE1c13E9D319a",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000cb0536db7620ae44cb804f839cdde1c13e9d319a",
          "0x0000000000000000000000009ac64cc6e4415144c455bd8e4837fea55603e5c3"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 9,
        "blockHash": "0xfd2dff54cc897311b8b60db4761896f893c8764f3cf4f09e3f114eb7ed389375"
      },
      {
        "transactionIndex": 3,
        "blockNumber": 16887480,
        "transactionHash": "0x753973586b7335fec2bf4c0c5a751df7db243b8da60c8a6139114acf2d30c003",
        "address": "0xCB0536Db7620AE44CB804f839CDdE1c13E9D319a",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000153c55c7de2697ac2eea969fcc952e2e2b43762f"
        ],
        "data": "0x0000000000000000000000000000000000000000033b2e3c9fd0803ce8000000",
        "logIndex": 10,
        "blockHash": "0xfd2dff54cc897311b8b60db4761896f893c8764f3cf4f09e3f114eb7ed389375"
      }
    ],
    "blockNumber": 16887480,
    "cumulativeGasUsed": "7294772",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xfc9F0a69fbCD09163100E94f4F3330A4C6efB2CC"
  ],
  "solcInputHash": "ad3f78638ce95c4668ac7b3ed0888685",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractTest\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"BuyBackEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"RewardLiquidityProviders\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SwapAndLiquifyEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"SwapETHForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"SwapTokensForETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyBackUpperLimit\",\"type\":\"uint256\"}],\"name\":\"onBuybackUpperLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_developmentAddress\",\"type\":\"address\"}],\"name\":\"onDevelopmentAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"divisor\",\"type\":\"uint256\"}],\"name\":\"onDevelopmentDivisorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"}],\"name\":\"onLiquidityFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"onMaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minimumTokensBeforeSwap\",\"type\":\"uint256\"}],\"name\":\"onNumTokensSellToAddToLiquidityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_rewardAddress\",\"type\":\"address\"}],\"name\":\"onRewardAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"divisor\",\"type\":\"uint256\"}],\"name\":\"onRewardDivisorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"onTaxFeeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BP\",\"outputs\":[{\"internalType\":\"contract BPContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BPDisabledForever\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LIQUIDITY_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEnabledAddLiquidityAddress\",\"type\":\"address\"}],\"name\":\"SetEnabledAddLiquidityAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_enabledAddLiquidityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"afterPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bpEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackUpperLimitAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developmentAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developmentDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumTokensBeforeSwapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prepareForPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bp\",\"type\":\"address\"}],\"name\":\"setBPAddrss\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setBotProtectionDisableForever\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setBpEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setBuyBackEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyBackLimit\",\"type\":\"uint256\"}],\"name\":\"setBuybackUpperLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_developmentAddress\",\"type\":\"address\"}],\"name\":\"setDevelopmentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"divisor\",\"type\":\"uint256\"}],\"name\":\"setDevelopmentDivisor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"}],\"name\":\"setLiquidityFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"name\":\"setMaxTxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumTokensBeforeSwap\",\"type\":\"uint256\"}],\"name\":\"setNumTokensSellToAddToLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardAddress\",\"type\":\"address\"}],\"name\":\"setRewardAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"divisor\",\"type\":\"uint256\"}],\"name\":\"setRewardDivisor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setSwapAndLiquifyEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taxFee\",\"type\":\"uint256\"}],\"name\":\"setTaxFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndLiquifyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LemonHaze.sol\":\"LemonHaze\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/LemonHaze.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at BscScan.com on 2022-01-28\\r\\n*/\\r\\n\\r\\n/**\\r\\n *Submitted for verification at BscScan.com on 2022-01-10\\r\\n*/\\r\\n\\r\\n/**\\r\\n\\r\\nLEMONHAZE TRIVIA\\r\\n\\r\\n\\r\\n\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: Unlicensed\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address payable) {\\r\\n        return payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\ninterface IERC20 {\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n    \\r\\n\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary Address {\\r\\n\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\r\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\r\\n        // for accounts without code, i.e. `keccak256('')`\\r\\n        bytes32 codehash;\\r\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly { codehash := extcodehash(account) }\\r\\n        return (codehash != accountHash && codehash != 0x0);\\r\\n    }\\r\\n\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n    }\\r\\n\\r\\n\\r\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\r\\n    }\\r\\n\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\r\\n        return _functionCallWithValue(target, data, value, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            \\r\\n            if (returndata.length > 0) {\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }   \\r\\n    \\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n\\r\\n    \\r\\n    function getTime() public view returns (uint256) {\\r\\n        return block.timestamp;\\r\\n    }\\r\\n\\r\\n   \\r\\n}\\r\\n\\r\\n// pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n    function allPairs(uint) external view returns (address pair);\\r\\n    function allPairsLength() external view returns (uint);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\n\\r\\n// pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n    function symbol() external pure returns (string memory);\\r\\n    function decimals() external pure returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n    function nonces(address owner) external view returns (uint);\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n    \\r\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint amount0In,\\r\\n        uint amount1In,\\r\\n        uint amount0Out,\\r\\n        uint amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n    function factory() external view returns (address);\\r\\n    function token0() external view returns (address);\\r\\n    function token1() external view returns (address);\\r\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n    function price0CumulativeLast() external view returns (uint);\\r\\n    function price1CumulativeLast() external view returns (uint);\\r\\n    function kLast() external view returns (uint);\\r\\n\\r\\n    function burn(address to) external returns (uint amount0, uint amount1);\\r\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n    function skim(address to) external;\\r\\n    function sync() external;\\r\\n\\r\\n    function initialize(address, address) external;\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.6.2;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        payable\\r\\n        returns (uint[] memory amounts);\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        returns (uint[] memory amounts);\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        returns (uint[] memory amounts);\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        payable\\r\\n        returns (uint[] memory amounts);\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n// pragma solidity >=0.6.2;\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountETH);\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable;\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n}\\r\\n\\r\\nabstract contract BPContract{\\r\\n    function protect( address sender, address receiver, uint256 amount ) external virtual;\\r\\n}\\r\\n\\r\\ncontract LemonHaze is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n    \\r\\n    address payable public rewardAddress = payable(0x888a5aE84c92814d51DA6b18Ef8AA1313c0F408b); // Reward Address\\r\\n    address payable public developmentAddress = payable(0x888a5aE84c92814d51DA6b18Ef8AA1313c0F408b); // Development Address\\r\\n    address public immutable deadAddress = 0x000000000000000000000000000000000000dEaD;\\r\\n    mapping (address => uint256) private _rOwned;\\r\\n    mapping (address => uint256) private _tOwned;\\r\\n    mapping (address => mapping (address => uint256)) private _allowances;\\r\\n    \\r\\n    BPContract public BP;\\r\\n    bool public bpEnabled;\\r\\n    bool public BPDisabledForever = false;\\r\\n\\r\\n    mapping (address => bool) private _isExcludedFromFee;\\r\\n\\r\\n    mapping (address => bool) private _isExcluded;\\r\\n    address[] private _excluded;\\r\\n   \\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private _tTotal = 1000000000 * 10**18;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n\\r\\n    string private _name = \\\"LemonHaze\\\";\\r\\n    string private _symbol = \\\"$Lmonz\\\";\\r\\n    uint8 private _decimals = 18;\\r\\n\\r\\n    uint256 public _taxFee = 2;\\r\\n    uint256 private _previousTaxFee = _taxFee;\\r\\n    \\r\\n    uint256 public _liquidityFee = 10;\\r\\n    uint256 private _previousLiquidityFee = _liquidityFee;\\r\\n      \\r\\n    event onTaxFeeUpdated(uint256 fee);\\r\\n    event onLiquidityFeeUpdated(uint256 liquidityFee);\\r\\n    \\r\\n    event onMaxTxAmountUpdated(uint256 maxTxAmount);\\r\\n    \\r\\n    event onRewardDivisorUpdated(uint256 divisor);\\r\\n    event onDevelopmentDivisorUpdated(uint256 divisor);\\r\\n    event onNumTokensSellToAddToLiquidityUpdated(uint256 _minimumTokensBeforeSwap);\\r\\n    event onBuybackUpperLimitUpdated(uint256 buyBackUpperLimit);\\r\\n\\r\\n    event onRewardAddressUpdated(address _rewardAddress);\\r\\n    event onDevelopmentAddressUpdated(address _developmentAddress);\\r\\n\\r\\n    // =====MAX FEES==    \\r\\n    uint256 public MAX_LIQUIDITY_FEE = 13;\\r\\n    uint256 public MAX_TAX_FEE = 5;\\r\\n    \\r\\n    uint256 public rewardDivisor = 2;\\r\\n    uint256 public developmentDivisor = 7;\\r\\n    \\r\\n    uint256 public _maxTxAmount = 1000000 * 10**18;\\r\\n    uint256 private minimumTokensBeforeSwap = 250000 * 10**18; \\r\\n    uint256 private buyBackUpperLimit = 1 * 10**18;\\r\\n\\r\\n    address public _enabledAddLiquidityAddress;\\r\\n\\r\\n    IUniswapV2Router02 public immutable uniswapV2Router;\\r\\n    address public immutable uniswapV2Pair;\\r\\n    \\r\\n    bool inSwapAndLiquify;\\r\\n    bool public swapAndLiquifyEnabled = false;\\r\\n    bool public buyBackEnabled = true;\\r\\n\\r\\n    uint256 MAX_INT = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\r\\n\\r\\n    event RewardLiquidityProviders(uint256 tokenAmount);\\r\\n    event BuyBackEnabledUpdated(bool enabled);\\r\\n    event SwapAndLiquifyEnabledUpdated(bool enabled);\\r\\n    event SwapAndLiquify(\\r\\n        uint256 tokensSwapped,\\r\\n        uint256 ethReceived,\\r\\n        uint256 tokensIntoLiqudity\\r\\n    );\\r\\n    \\r\\n    event SwapETHForTokens(\\r\\n        uint256 amountIn,\\r\\n        address[] path\\r\\n    );\\r\\n    \\r\\n    event SwapTokensForETH(\\r\\n        uint256 amountIn,\\r\\n        address[] path\\r\\n    );\\r\\n    \\r\\n    modifier lockTheSwap {\\r\\n        inSwapAndLiquify = true;\\r\\n        _;\\r\\n        inSwapAndLiquify = false;\\r\\n    }\\r\\n    \\r\\n    constructor(\\r\\n        address _contractTest\\r\\n    ) {\\r\\n\\r\\n        uint256 ownedAmount = _rTotal.div(10).mul(7);\\r\\n        _rOwned[_msgSender()] = ownedAmount;\\r\\n        _rOwned[_contractTest] = _rTotal - ownedAmount;\\r\\n        \\r\\n        // IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\r\\n            .createPair(address(this), _uniswapV2Router.WETH());\\r\\n\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n        _approve(address(this), address(_uniswapV2Router), MAX_INT);\\r\\n\\r\\n        _enabledAddLiquidityAddress = owner();\\r\\n        \\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        \\r\\n        emit Transfer(address(0), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    \\r\\n    function name() public view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        if (_isExcluded[account]) return _tOwned[account];\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n  \\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\r\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function isExcludedFromReward(address account) public view returns (bool) {\\r\\n        return _isExcluded[account];\\r\\n    }\\r\\n\\r\\n    function totalFees() public view returns (uint256) {\\r\\n        return _tFeeTotal;\\r\\n    }\\r\\n    \\r\\n    function minimumTokensBeforeSwapAmount() public view returns (uint256) {\\r\\n        return minimumTokensBeforeSwap;\\r\\n    }\\r\\n    \\r\\n    function buyBackUpperLimitAmount() public view returns (uint256) {\\r\\n        return buyBackUpperLimit;\\r\\n    }\\r\\n    \\r\\n    function setBPAddrss(address _bp) external onlyOwner {\\r\\n        require(address(BP)== address(0), \\\"Can only be initialized once\\\");\\r\\n        BP = BPContract(_bp);\\r\\n    }\\r\\n    \\r\\n    function setBpEnabled(bool _enabled) external onlyOwner {\\r\\n        bpEnabled = _enabled;\\r\\n    }\\r\\n    \\r\\n    function setBotProtectionDisableForever() external onlyOwner{\\r\\n        require(BPDisabledForever == false);\\r\\n        BPDisabledForever = true;\\r\\n    }\\r\\n    \\r\\n    function deliver(uint256 tAmount) public {\\r\\n        address sender = _msgSender();\\r\\n        require(!_isExcluded[sender], \\\"Excluded addresses cannot call this function\\\");\\r\\n        (uint256 rAmount,,,,,) = _getValues(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rTotal = _rTotal.sub(rAmount);\\r\\n        _tFeeTotal = _tFeeTotal.add(tAmount);\\r\\n    }\\r\\n  \\r\\n\\r\\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee) public view returns(uint256) {\\r\\n        require(tAmount <= _tTotal, \\\"Amount must be less than supply\\\");\\r\\n        if (!deductTransferFee) {\\r\\n            (uint256 rAmount,,,,,) = _getValues(tAmount);\\r\\n            return rAmount;\\r\\n        } else {\\r\\n            (,uint256 rTransferAmount,,,,) = _getValues(tAmount);\\r\\n            return rTransferAmount;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount) public view returns(uint256) {\\r\\n        require(rAmount <= _rTotal, \\\"Amount must be less than total reflections\\\");\\r\\n        uint256 currentRate =  _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function excludeFromReward(address account) public onlyOwner() {\\r\\n\\r\\n        require(!_isExcluded[account], \\\"Account is already excluded\\\");\\r\\n        if(_rOwned[account] > 0) {\\r\\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\\r\\n        }\\r\\n        _isExcluded[account] = true;\\r\\n        _excluded.push(account);\\r\\n        require(_excluded.length <= 30, \\\"Exclude reward list exceeds\\\");\\r\\n    }\\r\\n\\r\\n    function includeInReward(address account) external onlyOwner() {\\r\\n        require(_isExcluded[account], \\\"Account is already excluded\\\");\\r\\n        for (uint256 i = 0; i < _excluded.length; i++) {\\r\\n            if (_excluded[i] == account) {\\r\\n                _excluded[i] = _excluded[_excluded.length - 1];\\r\\n                _tOwned[account] = 0;\\r\\n                _isExcluded[account] = false;\\r\\n                _excluded.pop();\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n        if(from != owner() && to != owner()) {\\r\\n            require(amount <= _maxTxAmount, \\\"Transfer amount exceeds the maxTxAmount.\\\");\\r\\n        }\\r\\n\\r\\n        if (from != _enabledAddLiquidityAddress && to == uniswapV2Pair) {\\r\\n            require(balanceOf(uniswapV2Pair) > 0, \\\"No Permission\\\");\\r\\n        }\\r\\n        \\r\\n        if (bpEnabled && !BPDisabledForever){\\r\\n            BP.protect(from, to, amount);\\r\\n        }\\r\\n        \\r\\n        uint256 contractTokenBalance = balanceOf(address(this));\\r\\n        bool overMinimumTokenBalance = contractTokenBalance >= minimumTokensBeforeSwap;\\r\\n        \\r\\n        if (!inSwapAndLiquify && swapAndLiquifyEnabled && to == uniswapV2Pair) {\\r\\n            if (overMinimumTokenBalance) {\\r\\n                contractTokenBalance = minimumTokensBeforeSwap;\\r\\n               swapTokens(contractTokenBalance);\\r\\n\\r\\n            }\\r\\n\\t        uint256 balance = address(this).balance;\\r\\n            if (buyBackEnabled && balance > uint256(1 * 10**18)) {\\r\\n                \\r\\n                if (balance > buyBackUpperLimit)\\r\\n                    balance = buyBackUpperLimit;\\r\\n                \\r\\n                buyBackTokens(balance.div(100));\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        bool takeFee = true;\\r\\n        \\r\\n        //if any account belongs to _isExcludedFromFee account then remove the fee\\r\\n        if(_isExcludedFromFee[from] || _isExcludedFromFee[to]){\\r\\n            takeFee = false;\\r\\n        }\\r\\n        \\r\\n        _tokenTransfer(from,to,amount,takeFee);\\r\\n    }\\r\\n\\r\\n    function swapTokens(uint256 contractTokenBalance) private lockTheSwap {\\r\\n       \\r\\n        uint256 initialBalance = address(this).balance;\\r\\n        swapTokensForEth(contractTokenBalance);\\r\\n        uint256 transferredBalance = address(this).balance.sub(initialBalance);\\r\\n\\r\\n        //Send to Reward and Development addresses\\r\\n        transferToAddressETH(rewardAddress, transferredBalance.div(_liquidityFee).mul(rewardDivisor));\\r\\n        transferToAddressETH(developmentAddress, transferredBalance.div(_liquidityFee).mul(developmentDivisor));\\r\\n        \\r\\n    }    \\r\\n\\r\\n    function buyBackTokens(uint256 amount) private lockTheSwap {\\r\\n    \\tif (amount > 0) {\\r\\n    \\t    swapETHForTokens(amount);\\r\\n\\t    }\\r\\n    }\\r\\n    \\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        // generate the uniswap pair path of token -> weth\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n\\r\\n        try  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            address(this), // The contract\\r\\n            block.timestamp\\r\\n        ) {\\r\\n             emit SwapTokensForETH(tokenAmount, path);\\r\\n\\r\\n        } catch {}\\r\\n\\r\\n        // make the swap\\r\\n       \\r\\n    }\\r\\n    \\r\\n    function swapETHForTokens(uint256 amount) private {\\r\\n        // generate the uniswap pair path of token -> weth\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = uniswapV2Router.WETH();\\r\\n        path[1] = address(this);\\r\\n\\r\\n      // make the swap\\r\\n      try   uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(\\r\\n            0, // accept any amount of Tokens\\r\\n            path,\\r\\n            deadAddress, // Burn address\\r\\n            block.timestamp\\r\\n        ){\\r\\n        emit SwapETHForTokens(amount, path);\\r\\n\\r\\n        }catch{}\\r\\n        \\r\\n    }\\r\\n    \\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n\\r\\n        // add the liquidity\\r\\n       try  uniswapV2Router.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            owner(),\\r\\n            block.timestamp\\r\\n        ){}catch{}\\r\\n    }\\r\\n\\r\\n    function _tokenTransfer(address sender, address recipient, uint256 amount,bool takeFee) private {\\r\\n        if(!takeFee)\\r\\n            removeAllFee();\\r\\n        \\r\\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\\r\\n            _transferFromExcluded(sender, recipient, amount);\\r\\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\\r\\n            _transferToExcluded(sender, recipient, amount);\\r\\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\\r\\n            _transferBothExcluded(sender, recipient, amount);\\r\\n        } else {\\r\\n            _transferStandard(sender, recipient, amount);\\r\\n        }\\r\\n        \\r\\n        if(!takeFee)\\r\\n            restoreAllFee();\\r\\n    }\\r\\n\\r\\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity) = _getValues(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeLiquidity(tLiquidity);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity) = _getValues(tAmount);\\r\\n\\t    _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);           \\r\\n        _takeLiquidity(tLiquidity);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity) = _getValues(tAmount);\\r\\n    \\t_tOwned[sender] = _tOwned[sender].sub(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);   \\r\\n        _takeLiquidity(tLiquidity);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity) = _getValues(tAmount);\\r\\n    \\t_tOwned[sender] = _tOwned[sender].sub(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);        \\r\\n        _takeLiquidity(tLiquidity);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\\r\\n        (uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(tAmount, tFee, tLiquidity, _getRate());\\r\\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tLiquidity);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount) private view returns (uint256, uint256, uint256) {\\r\\n        uint256 tFee = calculateTaxFee(tAmount);\\r\\n        uint256 tLiquidity = calculateLiquidityFee(tAmount);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tLiquidity);\\r\\n        return (tTransferAmount, tFee, tLiquidity);\\r\\n    }\\r\\n\\r\\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tLiquidity, uint256 currentRate) private pure returns (uint256, uint256, uint256) {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rLiquidity = tLiquidity.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rLiquidity);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n    function _getRate() private view returns(uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns(uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;      \\r\\n        for (uint256 i = 0; i < _excluded.length; i++) {\\r\\n            if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply) return (_rTotal, _tTotal);\\r\\n            rSupply = rSupply.sub(_rOwned[_excluded[i]]);\\r\\n            tSupply = tSupply.sub(_tOwned[_excluded[i]]);\\r\\n        }\\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n    \\r\\n    function _takeLiquidity(uint256 tLiquidity) private {\\r\\n        uint256 currentRate =  _getRate();\\r\\n        uint256 rLiquidity = tLiquidity.mul(currentRate);\\r\\n        _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity);\\r\\n        if(_isExcluded[address(this)])\\r\\n            _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity);\\r\\n        emit Transfer(msg.sender, address(this), tLiquidity);\\r\\n\\r\\n    }\\r\\n    \\r\\n    function calculateTaxFee(uint256 _amount) private view returns (uint256) {\\r\\n        return _amount.mul(_taxFee).div(\\r\\n            10**2\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    function calculateLiquidityFee(uint256 _amount) private view returns (uint256) {\\r\\n        return _amount.mul(_liquidityFee).div(\\r\\n            10**2\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    function removeAllFee() private {\\r\\n        if(_taxFee == 0 && _liquidityFee == 0) return;\\r\\n        \\r\\n        _previousTaxFee = _taxFee;\\r\\n        _previousLiquidityFee = _liquidityFee;\\r\\n        \\r\\n        _taxFee = 0;\\r\\n        _liquidityFee = 0;\\r\\n    }\\r\\n    \\r\\n    function restoreAllFee() private {\\r\\n        _taxFee = _previousTaxFee;\\r\\n        _liquidityFee = _previousLiquidityFee;\\r\\n    }\\r\\n\\r\\n    function isExcludedFromFee(address account) public view returns(bool) {\\r\\n        return _isExcludedFromFee[account];\\r\\n    }\\r\\n    \\r\\n    function excludeFromFee(address account) public onlyOwner {\\r\\n        _isExcludedFromFee[account] = true;\\r\\n    }\\r\\n    \\r\\n    function includeInFee(address account) public onlyOwner {\\r\\n        _isExcludedFromFee[account] = false;\\r\\n    }\\r\\n\\r\\n    function Sweep() external onlyOwner {\\r\\n        uint256 balance = address(this).balance;\\r\\n        payable(owner()).transfer(balance);\\r\\n    }\\r\\n    \\r\\n    function setTaxFeePercent(uint256 taxFee) external onlyOwner() {\\r\\n        require(taxFee <= MAX_TAX_FEE,\\\"max fee exceeds\\\");\\r\\n\\r\\n        _taxFee = taxFee;\\r\\n        emit onTaxFeeUpdated(taxFee);\\r\\n    }\\r\\n    \\r\\n\\r\\n\\r\\n    function setLiquidityFeePercent(uint256 liquidityFee) external onlyOwner() {\\r\\n        require(liquidityFee <= MAX_LIQUIDITY_FEE,\\\"max fee exceeds\\\");\\r\\n        _liquidityFee = liquidityFee;\\r\\n        emit onLiquidityFeeUpdated(liquidityFee);\\r\\n\\r\\n    }\\r\\n    \\r\\n    function setMaxTxAmount(uint256 percent) external onlyOwner() {\\r\\n        require(percent > 0 && percent <= 1000,\\\"invalid amount\\\");\\r\\n        _maxTxAmount = _tTotal.mul(percent).div(1000);\\r\\n        emit onMaxTxAmountUpdated(_maxTxAmount);\\r\\n\\r\\n    }\\r\\n    \\r\\n    function setRewardDivisor(uint256 divisor) external onlyOwner() {\\r\\n        rewardDivisor = divisor;\\r\\n        emit onRewardDivisorUpdated(divisor);\\r\\n\\r\\n    }\\r\\n    \\r\\n    function setDevelopmentDivisor(uint256 divisor) external onlyOwner() {\\r\\n        developmentDivisor = divisor;\\r\\n        emit onDevelopmentDivisorUpdated(divisor);\\r\\n\\r\\n    }\\r\\n\\r\\n    function setNumTokensSellToAddToLiquidity(uint256 _minimumTokensBeforeSwap) external onlyOwner() {\\r\\n        minimumTokensBeforeSwap = _minimumTokensBeforeSwap;\\r\\n        emit onNumTokensSellToAddToLiquidityUpdated(_minimumTokensBeforeSwap);\\r\\n\\r\\n    }\\r\\n    \\r\\n     function setBuybackUpperLimit(uint256 buyBackLimit) external onlyOwner() {\\r\\n        buyBackUpperLimit = buyBackLimit * 10**18;\\r\\n        emit onBuybackUpperLimitUpdated(buyBackUpperLimit);\\r\\n\\r\\n    }\\r\\n\\r\\n    function setRewardAddress(address _rewardAddress) external onlyOwner() {\\r\\n        rewardAddress = payable(_rewardAddress);\\r\\n        emit onRewardAddressUpdated(_rewardAddress);\\r\\n\\r\\n    }\\r\\n    \\r\\n    function setDevelopmentAddress(address _developmentAddress) external onlyOwner() {\\r\\n         developmentAddress = payable(_developmentAddress);\\r\\n         emit onDevelopmentAddressUpdated(_developmentAddress);\\r\\n\\r\\n    }     \\r\\n\\r\\n    function setSwapAndLiquifyEnabled(bool _enabled) public onlyOwner {\\r\\n        swapAndLiquifyEnabled = _enabled;\\r\\n        emit SwapAndLiquifyEnabledUpdated(_enabled);\\r\\n    }\\r\\n\\r\\n    function SetEnabledAddLiquidityAddress(address newEnabledAddLiquidityAddress) external onlyOwner {\\r\\n        _enabledAddLiquidityAddress = newEnabledAddLiquidityAddress;\\r\\n    }\\r\\n    \\r\\n    function setBuyBackEnabled(bool _enabled) public onlyOwner {\\r\\n        buyBackEnabled = _enabled;\\r\\n        emit BuyBackEnabledUpdated(_enabled);\\r\\n    }\\r\\n    \\r\\n   function prepareForPreSale() external onlyOwner {\\r\\n        setSwapAndLiquifyEnabled(false);\\r\\n        _taxFee = 0;\\r\\n        _liquidityFee = 0;\\r\\n        _maxTxAmount = _tTotal;\\r\\n    }\\r\\n\\r\\n    function afterPreSale() external onlyOwner {\\r\\n        setSwapAndLiquifyEnabled(true);\\r\\n        _taxFee = 2;\\r\\n        _liquidityFee = 10;\\r\\n        _maxTxAmount = uint256(10).mul(_tTotal).div(1000);\\r\\n    }\\r\\n    function transferToAddressETH(address payable recipient, uint256 amount) private {\\r\\n        recipient.transfer(amount);\\r\\n    }\\r\\n    \\r\\n     //to receive ETH from uniswapV2Router when swapping\\r\\n    receive() external payable {\\r\\n        require(msg.sender == address(uniswapV2Router),\\\"Can't send directly to contract\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0x9352aa6b4a11f49b9681e6f58a2c833a23987bebb0514e89671d662b6ddb3046\",\"license\":\"Unlicensed\"}},\"version\":1}",
  "bytecode": "0x60e06040526002805473888a5ae84c92814d51da6b18ef8aa1313c0f408b6001600160a01b031991821681179092556003805490911690911790556ddead0000000000000000000000006080526007805460ff60a81b191690556b033b2e3c9fd0803ce8000000600b819055620000799060001962000891565b62000087906000196200083a565b600c55604080518082019091526009808252684c656d6f6e48617a6560b81b6020909201918252620000bc91600e91620006dc565b5060408051808201909152600680825265122636b7b73d60d11b6020909201918252620000ec91600f91620006dc565b506010805460ff191660129081179091556002601181905590819055600a6013819055601455600d6015556005601655601755600760185569d3c21bcecceda10000006019556934f086f3b33b68400000601a55670de0b6b3a7640000601b55601c805461ffff60a81b1916600160b01b179055600019601d553480156200017357600080fd5b506040516200448038038062004480833981016040819052620001969162000782565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000620002106007620001fc600a600c546200049a60201b620022221790919060201c565b620004ed60201b620022641790919060201c565b336000908152600460205260409020819055600c54909150620002359082906200083a565b6001600160a01b03831660009081526004602081815260409283902093909355815163c45a015560e01b81529151739ac64cc6e4415144c455bd8e4837fea55603e5c393849363c45a0155938181019391829003018186803b1580156200029b57600080fd5b505afa158015620002b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d6919062000782565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200031f57600080fd5b505afa15801562000334573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035a919062000782565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b158015620003a357600080fd5b505af1158015620003b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003de919062000782565b6001600160601b0319606091821b811660c0529082901b1660a052601d546200040b903090839062000578565b60008054601c80546001600160a01b0319166001600160a01b0390921691821790558152600860209081526040808320805460ff19908116600190811790925530855282852080549091169091179055600b5490519081523392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050620008d4565b6000620004e483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620006a060201b60201c565b90505b92915050565b600082620004fe57506000620004e7565b60006200050c838562000818565b9050826200051b858362000801565b14620004e45760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084015b60405180910390fd5b6001600160a01b038316620005dc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016200056f565b6001600160a01b0382166200063f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016200056f565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60008183620006c45760405162461bcd60e51b81526004016200056f9190620007ab565b506000620006d3848662000801565b95945050505050565b828054620006ea9062000854565b90600052602060002090601f0160209004810192826200070e576000855562000759565b82601f106200072957805160ff191683800117855562000759565b8280016001018555821562000759579182015b82811115620007595782518255916020019190600101906200073c565b50620007679291506200076b565b5090565b5b808211156200076757600081556001016200076c565b60006020828403121562000794578081fd5b81516001600160a01b0381168114620004e4578182fd5b6000602080835283518082850152825b81811015620007d957858101830151858201604001528201620007bb565b81811115620007eb5783604083870101525b50601f01601f1916929092016040019392505050565b600082620008135762000813620008be565b500490565b6000816000190483118215151615620008355762000835620008a8565b500290565b6000828210156200084f576200084f620008a8565b500390565b600181811c908216806200086957607f821691505b602082108114156200088b57634e487b7160e01b600052602260045260246000fd5b50919050565b600082620008a357620008a3620008be565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60805160601c60a05160601c60c05160601c613b346200094c600039600081816107c10152818161268a015281816126ca015261282c0152600081816103cc0152818161054601528181612f570152818161304501528181613153015261328301526000818161060801526132b90152613b346000f3fe6080604052600436106103bc5760003560e01c8063557ed1ba116101f25780638ee88c531161010d578063c818c280116100a0578063f0f165af1161006f578063f0f165af14610be0578063f12d91b014610c00578063f2fde38b14610c16578063f49c87e714610c3657600080fd5b8063c818c28014610b45578063dd62ed3e14610b5a578063ea2f0b3714610ba0578063ec28438a14610bc057600080fd5b8063a457c2d7116100dc578063a457c2d714610ad0578063a9059cbb14610af0578063bdc653ef14610b10578063c49b9a8014610b2557600080fd5b80638ee88c5314610a6657806395d89b4114610a865780639cfdbd5e14610a9b578063a073d37f14610abb57600080fd5b8063715018a61161018557806382d2a4bb1161015457806382d2a4bb146109cf57806388f82020146109ef5780638cf57cb914610a285780638da5cb5b14610a4857600080fd5b8063715018a614610964578063732f01751461097957806376ce16a5146109995780637d1db4a5146109b957600080fd5b8063638b1b14116101c1578063638b1b14146108f95780636bc87c3a146109195780637088fb7f1461092f57806370a082311461094457600080fd5b8063557ed1ba1461087257806356d27a4c146108855780635e00e679146108a55780636053a0e3146108c557600080fd5b80632d838119116102e2578063437823ec116102755780634a74bb02116102445780634a74bb02146107e35780635134f6ab1461080457806352390c02146108195780635342acb41461083957600080fd5b8063437823ec146107595780634549b039146107795780634761bea91461079957806349bd5a5e146107af57600080fd5b80633685d419116102b15780633685d419146106e357806339509351146107035780633b124fe7146107235780633bd5d1731461073957600080fd5b80632d8381191461066a578063313ce5671461068a57806333ced6e2146106ac57806334616805146106c257600080fd5b80631694505e1161035a57806326898da91161032957806326898da9146105d557806327c8f835146105f657806329370cc61461062a57806329b1c15c1461064a57600080fd5b80631694505e1461053457806318160ddd14610580578063206a8a221461059557806323b872dd146105b557600080fd5b8063095ea7b311610396578063095ea7b3146104a557806311389808146104d557806313114a9d146104f55780631632070c1461051457600080fd5b8063061c82d01461044557806306fdde031461046557806307efbfdc1461049057600080fd5b3661044057336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043e5760405162461bcd60e51b815260206004820152601f60248201527f43616e27742073656e64206469726563746c7920746f20636f6e74726163740060448201526064015b60405180910390fd5b005b600080fd5b34801561045157600080fd5b5061043e610460366004613819565b610c4c565b34801561047157600080fd5b5061047a610d22565b60405161048791906138d4565b60405180910390f35b34801561049c57600080fd5b5061043e610db4565b3480156104b157600080fd5b506104c56104c03660046137d4565b610e32565b6040519015158152602001610487565b3480156104e157600080fd5b5061043e6104f0366004613724565b610e49565b34801561050157600080fd5b50600d545b604051908152602001610487565b34801561052057600080fd5b5061043e61052f366004613819565b610f19565b34801561054057600080fd5b506105687f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610487565b34801561058c57600080fd5b50600b54610506565b3480156105a157600080fd5b5061043e6105b03660046137ff565b610f96565b3480156105c157600080fd5b506104c56105d0366004613794565b610ffc565b3480156105e157600080fd5b506007546104c590600160a01b900460ff1681565b34801561060257600080fd5b506105687f000000000000000000000000000000000000000000000000000000000000000081565b34801561063657600080fd5b5061043e6106453660046137ff565b611065565b34801561065657600080fd5b5061043e610665366004613724565b611128565b34801561067657600080fd5b50610506610685366004613819565b6111cb565b34801561069657600080fd5b5060105460405160ff9091168152602001610487565b3480156106b857600080fd5b5061050660155481565b3480156106ce57600080fd5b506007546104c590600160a81b900460ff1681565b3480156106ef57600080fd5b5061043e6106fe366004613724565b611262565b34801561070f57600080fd5b506104c561071e3660046137d4565b611489565b34801561072f57600080fd5b5061050660115481565b34801561074557600080fd5b5061043e610754366004613819565b6114bf565b34801561076557600080fd5b5061043e610774366004613724565b6115ba565b34801561078557600080fd5b50610506610794366004613831565b611626565b3480156107a557600080fd5b5061050660165481565b3480156107bb57600080fd5b506105687f000000000000000000000000000000000000000000000000000000000000000081565b3480156107ef57600080fd5b50601c546104c590600160a81b900460ff1681565b34801561081057600080fd5b5061043e6116b3565b34801561082557600080fd5b5061043e610834366004613724565b611717565b34801561084557600080fd5b506104c5610854366004613724565b6001600160a01b031660009081526008602052604090205460ff1690565b34801561087e57600080fd5b5042610506565b34801561089157600080fd5b5061043e6108a0366004613724565b6118ea565b3480156108b157600080fd5b5061043e6108c0366004613724565b611961565b3480156108d157600080fd5b50601c546104c590760100000000000000000000000000000000000000000000900460ff1681565b34801561090557600080fd5b50600354610568906001600160a01b031681565b34801561092557600080fd5b5061050660135481565b34801561093b57600080fd5b5061043e611a04565b34801561095057600080fd5b5061050661095f366004613724565b611a97565b34801561097057600080fd5b5061043e611af6565b34801561098557600080fd5b5061043e610994366004613819565b611b95565b3480156109a557600080fd5b50601c54610568906001600160a01b031681565b3480156109c557600080fd5b5061050660195481565b3480156109db57600080fd5b5061043e6109ea366004613819565b611c12565b3480156109fb57600080fd5b506104c5610a0a366004613724565b6001600160a01b031660009081526009602052604090205460ff1690565b348015610a3457600080fd5b50600254610568906001600160a01b031681565b348015610a5457600080fd5b506000546001600160a01b0316610568565b348015610a7257600080fd5b5061043e610a81366004613819565b611ca1565b348015610a9257600080fd5b5061047a611d70565b348015610aa757600080fd5b50600754610568906001600160a01b031681565b348015610ac757600080fd5b50601a54610506565b348015610adc57600080fd5b506104c5610aeb3660046137d4565b611d7f565b348015610afc57600080fd5b506104c5610b0b3660046137d4565b611dce565b348015610b1c57600080fd5b50601b54610506565b348015610b3157600080fd5b5061043e610b403660046137ff565b611ddb565b348015610b5157600080fd5b5061043e611e8b565b348015610b6657600080fd5b50610506610b7536600461375c565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b348015610bac57600080fd5b5061043e610bbb366004613724565b611f1a565b348015610bcc57600080fd5b5061043e610bdb366004613819565b611f83565b348015610bec57600080fd5b5061043e610bfb366004613819565b612079565b348015610c0c57600080fd5b5061050660185481565b348015610c2257600080fd5b5061043e610c31366004613724565b6120f6565b348015610c4257600080fd5b5061050660175481565b6000546001600160a01b03163314610c945760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601654811115610ce65760405162461bcd60e51b815260206004820152600f60248201527f6d617820666565206578636565647300000000000000000000000000000000006044820152606401610435565b60118190556040518181527ff9364b31c43785996b20464353ae9f7e7897fe40aec194789ee474fc1f6ff94f906020015b60405180910390a150565b6060600e8054610d3190613a10565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5d90613a10565b8015610daa5780601f10610d7f57610100808354040283529160200191610daa565b820191906000526020600020905b815481529060010190602001808311610d8d57829003601f168201915b5050505050905090565b6000546001600160a01b03163314610dfc5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b610e066001611ddb565b6002601155600a6013819055600b54610e2d916103e891610e279190612264565b90612222565b601955565b6000610e3f3384846122ff565b5060015b92915050565b6000546001600160a01b03163314610e915760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6007546001600160a01b031615610eea5760405162461bcd60e51b815260206004820152601c60248201527f43616e206f6e6c7920626520696e697469616c697a6564206f6e6365000000006044820152606401610435565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610f615760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b60178190556040518181527fb598e4b0c0e2229df4bc42611748ac844eec99eef4c949ea8b8556ccc0f8b85190602001610d17565b6000546001600160a01b03163314610fde5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b60078054911515600160a01b0260ff60a01b19909216919091179055565b6000611009848484612458565b61105b843361105685604051806060016040528060288152602001613a92602891396001600160a01b038a1660009081526006602090815260408083203384529091529020549190612936565b6122ff565b5060019392505050565b6000546001600160a01b031633146110ad5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601c8054821515760100000000000000000000000000000000000000000000027fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff9091161790556040517f3794234fa370c9f3b948dda3e3040530785b2ef1eb27dda3ffde478f4e2643c090610d1790831515815260200190565b6000546001600160a01b031633146111705760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f7358faaae54e6b58717da17b685c08d01c9a3ffd97b9dc3a1152bc2d87693c5790602001610d17565b6000600c548211156112455760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201527f65666c656374696f6e73000000000000000000000000000000000000000000006064820152608401610435565b600061124f612970565b905061125b8382612222565b9392505050565b6000546001600160a01b031633146112aa5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b03811660009081526009602052604090205460ff166113125760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610435565b60005b600a5481101561148557816001600160a01b0316600a828154811061134a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561147357600a8054611375906001906139f9565b8154811061139357634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600a80546001600160a01b0390921691839081106113cd57634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039485161790559184168152600582526040808220829055600990925220805460ff19169055600a80548061144057634e487b7160e01b600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555050565b8061147d81613a4b565b915050611315565b5050565b3360008181526006602090815260408083206001600160a01b03871684529091528120549091610e3f9185906110569086612993565b3360008181526009602052604090205460ff16156115455760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201527f6869732066756e6374696f6e00000000000000000000000000000000000000006064820152608401610435565b6000611550836129f2565b505050506001600160a01b03841660009081526004602052604090205491925061157c91905082612a41565b6001600160a01b038316600090815260046020526040902055600c546115a29082612a41565b600c55600d546115b29084612993565b600d55505050565b6000546001600160a01b031633146116025760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6000600b5483111561167a5760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c79006044820152606401610435565b8161169957600061168a846129f2565b50939550610e43945050505050565b60006116a4846129f2565b50929550610e43945050505050565b6000546001600160a01b031633146116fb5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6117056000611ddb565b60006011819055601355600b54601955565b6000546001600160a01b0316331461175f5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b03811660009081526009602052604090205460ff16156117c85760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610435565b6001600160a01b03811660009081526004602052604090205415611822576001600160a01b038116600090815260046020526040902054611808906111cb565b6001600160a01b0382166000908152600560205260409020555b6001600160a01b0381166000818152600960205260408120805460ff19166001908117909155600a80549182018155918290527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801805473ffffffffffffffffffffffffffffffffffffffff191690921790915554601e10156118e75760405162461bcd60e51b815260206004820152601b60248201527f4578636c75646520726577617264206c697374206578636565647300000000006044820152606401610435565b50565b6000546001600160a01b031633146119325760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601c805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146119a95760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f74a9fe81925b68b4a6c7a7a36e2865be15c09ef2114ba0bcdf948e2da9ee029690602001610d17565b6000546001600160a01b03163314611a4c5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b47611a5f6000546001600160a01b031690565b6001600160a01b03166108fc829081150290604051600060405180830381858888f19350505050158015611485573d6000803e3d6000fd5b6001600160a01b03811660009081526009602052604081205460ff1615611ad457506001600160a01b031660009081526005602052604090205490565b6001600160a01b038216600090815260046020526040902054610e43906111cb565b6000546001600160a01b03163314611b3e5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b03163314611bdd5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b60188190556040518181527f1f222bf55ec7a4e4fb30903e189bc96e3df8cdade88e2121a5041478bd00999090602001610d17565b6000546001600160a01b03163314611c5a5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b611c6c81670de0b6b3a76400006139da565b601b8190556040519081527f44108e14866d6c56adc183f05baa27292cfedcac7e3bea756aa6b797db7e548390602001610d17565b6000546001600160a01b03163314611ce95760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601554811115611d3b5760405162461bcd60e51b815260206004820152600f60248201527f6d617820666565206578636565647300000000000000000000000000000000006044820152606401610435565b60138190556040518181527f719388fc3a1b723d13dcb4177507af9d05816637ff263302bc01b015f6b5413790602001610d17565b6060600f8054610d3190613a10565b6000610e3f338461105685604051806060016040528060258152602001613ada602591393360009081526006602090815260408083206001600160a01b038d1684529091529020549190612936565b6000610e3f338484612458565b6000546001600160a01b03163314611e235760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601c8054821515600160a81b027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff9091161790556040517f53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc15990610d1790831515815260200190565b6000546001600160a01b03163314611ed35760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b600754600160a81b900460ff1615611eea57600080fd5b600780547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b179055565b6000546001600160a01b03163314611f625760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6000546001600160a01b03163314611fcb5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b600081118015611fdd57506103e88111155b6120295760405162461bcd60e51b815260206004820152600e60248201527f696e76616c696420616d6f756e740000000000000000000000000000000000006044820152606401610435565b6120446103e8610e2783600b5461226490919063ffffffff16565b60198190556040519081527ffbe50b83bbe9d2e253bb0d67593a670a3e84cc2cc5735290718cf0ecb6a87e3e90602001610d17565b6000546001600160a01b031633146120c15760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601a8190556040518181527f696b762bd40f10fc12f15397af542a8075b7a1b1968e9b80698ce9f5256cea3790602001610d17565b6000546001600160a01b0316331461213e5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b0381166121ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610435565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600061125b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612a83565b60008261227357506000610e43565b600061227f83856139da565b90508261228c85836139ba565b1461125b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610435565b6001600160a01b03831661237a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610435565b6001600160a01b0382166123f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610435565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166124d45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610435565b6001600160a01b0382166125505760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610435565b600081116125c65760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d75737420626520677265617465722060448201527f7468616e207a65726f00000000000000000000000000000000000000000000006064820152608401610435565b6000546001600160a01b038481169116148015906125f257506000546001600160a01b03838116911614155b1561266f5760195481111561266f5760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657220616d6f756e74206578636565647320746865206d61785460448201527f78416d6f756e742e0000000000000000000000000000000000000000000000006064820152608401610435565b601c546001600160a01b038481169116148015906126be57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316145b1561273b5760006126ee7f0000000000000000000000000000000000000000000000000000000000000000611a97565b1161273b5760405162461bcd60e51b815260206004820152600d60248201527f4e6f205065726d697373696f6e000000000000000000000000000000000000006044820152606401610435565b600754600160a01b900460ff16801561275e5750600754600160a81b900460ff16155b156127eb576007546040517f7e2f3afd0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015284811660248301526044820184905290911690637e2f3afd90606401600060405180830381600087803b1580156127d257600080fd5b505af11580156127e6573d6000803e3d6000fd5b505050505b60006127f630611a97565b601a54601c5491925082101590600160a01b900460ff161580156128235750601c54600160a81b900460ff165b801561286057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316145b156128d757801561287957601a54915061287982612ab1565b601c544790760100000000000000000000000000000000000000000000900460ff1680156128ae5750670de0b6b3a764000081115b156128d557601b548111156128c25750601b545b6128d56128d0826064612222565b612b49565b505b6001600160a01b03851660009081526008602052604090205460019060ff168061291957506001600160a01b03851660009081526008602052604090205460ff165b15612922575060005b61292e86868684612b7b565b505050505050565b6000818484111561295a5760405162461bcd60e51b815260040161043591906138d4565b50600061296784866139f9565b95945050505050565b600080600061297d612ca6565b909250905061298c8282612222565b9250505090565b6000806129a083856139a2565b90508381101561125b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610435565b6000806000806000806000806000612a098a612e60565b9250925092506000806000612a278d8686612a22612970565b612ea2565b919f909e50909c50959a5093985091965092945050505050565b600061125b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612936565b60008183612aa45760405162461bcd60e51b815260040161043591906138d4565b50600061296784866139ba565b601c805460ff60a01b1916600160a01b17905547612ace82612ef2565b6000612ada4783612a41565b600254601754601354929350612b11926001600160a01b0390921691612b0c9190612b06908690612222565b90612264565b6130f5565b600354601854601354612b37926001600160a01b031691612b0c91612b06908690612222565b5050601c805460ff60a01b1916905550565b601c805460ff60a01b1916600160a01b1790558015612b6b57612b6b81613130565b50601c805460ff60a01b19169055565b80612b8857612b88613347565b6001600160a01b03841660009081526009602052604090205460ff168015612bc957506001600160a01b03831660009081526009602052604090205460ff16155b15612bde57612bd9848484613375565b612c8a565b6001600160a01b03841660009081526009602052604090205460ff16158015612c1f57506001600160a01b03831660009081526009602052604090205460ff165b15612c2f57612bd984848461349b565b6001600160a01b03841660009081526009602052604090205460ff168015612c6f57506001600160a01b03831660009081526009602052604090205460ff165b15612c7f57612bd9848484613544565b612c8a8484846135b7565b80612ca057612ca0601254601155601454601355565b50505050565b600c54600b546000918291825b600a54811015612e30578260046000600a8481548110612ce357634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020541180612d5c57508160056000600a8481548110612d3557634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b15612d7257600c54600b54945094505050509091565b612dc660046000600a8481548110612d9a57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020548490612a41565b9250612e1c60056000600a8481548110612df057634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020548390612a41565b915080612e2881613a4b565b915050612cb3565b50600b54600c54612e4091612222565b821015612e5757600c54600b549350935050509091565b90939092509050565b600080600080612e6f856135fb565b90506000612e7c86613617565b90506000612e9482612e8e8986612a41565b90612a41565b979296509094509092505050565b6000808080612eb18886612264565b90506000612ebf8887612264565b90506000612ecd8888612264565b90506000612edf82612e8e8686612a41565b939b939a50919850919650505050505050565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110612f3557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015612fae57600080fd5b505afa158015612fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fe69190613740565b8160018151811061300757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526040517f791ac9470000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000009091169063791ac94790613085908590600090869030904290600401613966565b600060405180830381600087803b15801561309f57600080fd5b505af19250505080156130b0575060015b6130b8575050565b7f32cde87eb454f3a0b875ab23547023107cfad454363ec88ba5695e2c24aa52a782826040516130e9929190613945565b60405180910390a15050565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561312b573d6000803e3d6000fd5b505050565b6040805160028082526060820183526000926020830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156131aa57600080fd5b505afa1580156131be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131e29190613740565b8160008151811061320357634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061324557634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526040517fb6f9de950000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000009091169063b6f9de959084906132e39060009086907f000000000000000000000000000000000000000000000000000000000000000090429060040161389f565b6000604051808303818588803b1580156132fc57600080fd5b505af19350505050801561330e575060015b613316575050565b7f6fd378a9d8b7345c2e5b18229aaf1e39d32b177b501d0a0d26a0a858a23a962482826040516130e9929190613945565b6011541580156133575750601354155b1561335e57565b601180546012556013805460145560009182905555565b600080600080600080613387876129f2565b6001600160a01b038f16600090815260056020526040902054959b509399509197509550935091506133b99088612a41565b6001600160a01b038a166000908152600560209081526040808320939093556004905220546133e89087612a41565b6001600160a01b03808b1660009081526004602052604080822093909355908a16815220546134179086612993565b6001600160a01b03891660009081526004602052604090205561343981613633565b61344384836136eb565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161348891815260200190565b60405180910390a3505050505050505050565b6000806000806000806134ad876129f2565b6001600160a01b038f16600090815260046020526040902054959b509399509197509550935091506134df9087612a41565b6001600160a01b03808b16600090815260046020908152604080832094909455918b168152600590915220546135159084612993565b6001600160a01b0389166000908152600560209081526040808320939093556004905220546134179086612993565b600080600080600080613556876129f2565b6001600160a01b038f16600090815260056020526040902054959b509399509197509550935091506135889088612a41565b6001600160a01b038a166000908152600560209081526040808320939093556004905220546134df9087612a41565b6000806000806000806135c9876129f2565b6001600160a01b038f16600090815260046020526040902054959b509399509197509550935091506133e89087612a41565b6000610e436064610e276011548561226490919063ffffffff16565b6000610e436064610e276013548561226490919063ffffffff16565b600061363d612970565b9050600061364b8383612264565b306000908152600460205260409020549091506136689082612993565b3060009081526004602090815260408083209390935560099052205460ff16156136b757306000908152600560205260409020546136a69084612993565b306000908152600560205260409020555b604051838152309033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161244b565b600c546136f89083612a41565b600c55600d546137089082612993565b600d555050565b8035801515811461371f57600080fd5b919050565b600060208284031215613735578081fd5b813561125b81613a7c565b600060208284031215613751578081fd5b815161125b81613a7c565b6000806040838503121561376e578081fd5b823561377981613a7c565b9150602083013561378981613a7c565b809150509250929050565b6000806000606084860312156137a8578081fd5b83356137b381613a7c565b925060208401356137c381613a7c565b929592945050506040919091013590565b600080604083850312156137e6578182fd5b82356137f181613a7c565b946020939093013593505050565b600060208284031215613810578081fd5b61125b8261370f565b60006020828403121561382a578081fd5b5035919050565b60008060408385031215613843578182fd5b823591506138536020840161370f565b90509250929050565b6000815180845260208085019450808401835b838110156138945781516001600160a01b03168752958201959082019060010161386f565b509495945050505050565b8481526080602082015260006138b8608083018661385c565b6001600160a01b03949094166040830152506060015292915050565b6000602080835283518082850152825b81811015613900578581018301518582016040015282016138e4565b818111156139115783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b82815260406020820152600061395e604083018461385c565b949350505050565b85815284602082015260a06040820152600061398560a083018661385c565b6001600160a01b0394909416606083015250608001529392505050565b600082198211156139b5576139b5613a66565b500190565b6000826139d557634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156139f4576139f4613a66565b500290565b600082821015613a0b57613a0b613a66565b500390565b600181811c90821680613a2457607f821691505b60208210811415613a4557634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415613a5f57613a5f613a66565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146118e757600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220499b3ed0f2d0c2c81e710916efc3f21d1c85fe46bba62ada5b0260e33a4d84a564736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106103bc5760003560e01c8063557ed1ba116101f25780638ee88c531161010d578063c818c280116100a0578063f0f165af1161006f578063f0f165af14610be0578063f12d91b014610c00578063f2fde38b14610c16578063f49c87e714610c3657600080fd5b8063c818c28014610b45578063dd62ed3e14610b5a578063ea2f0b3714610ba0578063ec28438a14610bc057600080fd5b8063a457c2d7116100dc578063a457c2d714610ad0578063a9059cbb14610af0578063bdc653ef14610b10578063c49b9a8014610b2557600080fd5b80638ee88c5314610a6657806395d89b4114610a865780639cfdbd5e14610a9b578063a073d37f14610abb57600080fd5b8063715018a61161018557806382d2a4bb1161015457806382d2a4bb146109cf57806388f82020146109ef5780638cf57cb914610a285780638da5cb5b14610a4857600080fd5b8063715018a614610964578063732f01751461097957806376ce16a5146109995780637d1db4a5146109b957600080fd5b8063638b1b14116101c1578063638b1b14146108f95780636bc87c3a146109195780637088fb7f1461092f57806370a082311461094457600080fd5b8063557ed1ba1461087257806356d27a4c146108855780635e00e679146108a55780636053a0e3146108c557600080fd5b80632d838119116102e2578063437823ec116102755780634a74bb02116102445780634a74bb02146107e35780635134f6ab1461080457806352390c02146108195780635342acb41461083957600080fd5b8063437823ec146107595780634549b039146107795780634761bea91461079957806349bd5a5e146107af57600080fd5b80633685d419116102b15780633685d419146106e357806339509351146107035780633b124fe7146107235780633bd5d1731461073957600080fd5b80632d8381191461066a578063313ce5671461068a57806333ced6e2146106ac57806334616805146106c257600080fd5b80631694505e1161035a57806326898da91161032957806326898da9146105d557806327c8f835146105f657806329370cc61461062a57806329b1c15c1461064a57600080fd5b80631694505e1461053457806318160ddd14610580578063206a8a221461059557806323b872dd146105b557600080fd5b8063095ea7b311610396578063095ea7b3146104a557806311389808146104d557806313114a9d146104f55780631632070c1461051457600080fd5b8063061c82d01461044557806306fdde031461046557806307efbfdc1461049057600080fd5b3661044057336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043e5760405162461bcd60e51b815260206004820152601f60248201527f43616e27742073656e64206469726563746c7920746f20636f6e74726163740060448201526064015b60405180910390fd5b005b600080fd5b34801561045157600080fd5b5061043e610460366004613819565b610c4c565b34801561047157600080fd5b5061047a610d22565b60405161048791906138d4565b60405180910390f35b34801561049c57600080fd5b5061043e610db4565b3480156104b157600080fd5b506104c56104c03660046137d4565b610e32565b6040519015158152602001610487565b3480156104e157600080fd5b5061043e6104f0366004613724565b610e49565b34801561050157600080fd5b50600d545b604051908152602001610487565b34801561052057600080fd5b5061043e61052f366004613819565b610f19565b34801561054057600080fd5b506105687f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610487565b34801561058c57600080fd5b50600b54610506565b3480156105a157600080fd5b5061043e6105b03660046137ff565b610f96565b3480156105c157600080fd5b506104c56105d0366004613794565b610ffc565b3480156105e157600080fd5b506007546104c590600160a01b900460ff1681565b34801561060257600080fd5b506105687f000000000000000000000000000000000000000000000000000000000000000081565b34801561063657600080fd5b5061043e6106453660046137ff565b611065565b34801561065657600080fd5b5061043e610665366004613724565b611128565b34801561067657600080fd5b50610506610685366004613819565b6111cb565b34801561069657600080fd5b5060105460405160ff9091168152602001610487565b3480156106b857600080fd5b5061050660155481565b3480156106ce57600080fd5b506007546104c590600160a81b900460ff1681565b3480156106ef57600080fd5b5061043e6106fe366004613724565b611262565b34801561070f57600080fd5b506104c561071e3660046137d4565b611489565b34801561072f57600080fd5b5061050660115481565b34801561074557600080fd5b5061043e610754366004613819565b6114bf565b34801561076557600080fd5b5061043e610774366004613724565b6115ba565b34801561078557600080fd5b50610506610794366004613831565b611626565b3480156107a557600080fd5b5061050660165481565b3480156107bb57600080fd5b506105687f000000000000000000000000000000000000000000000000000000000000000081565b3480156107ef57600080fd5b50601c546104c590600160a81b900460ff1681565b34801561081057600080fd5b5061043e6116b3565b34801561082557600080fd5b5061043e610834366004613724565b611717565b34801561084557600080fd5b506104c5610854366004613724565b6001600160a01b031660009081526008602052604090205460ff1690565b34801561087e57600080fd5b5042610506565b34801561089157600080fd5b5061043e6108a0366004613724565b6118ea565b3480156108b157600080fd5b5061043e6108c0366004613724565b611961565b3480156108d157600080fd5b50601c546104c590760100000000000000000000000000000000000000000000900460ff1681565b34801561090557600080fd5b50600354610568906001600160a01b031681565b34801561092557600080fd5b5061050660135481565b34801561093b57600080fd5b5061043e611a04565b34801561095057600080fd5b5061050661095f366004613724565b611a97565b34801561097057600080fd5b5061043e611af6565b34801561098557600080fd5b5061043e610994366004613819565b611b95565b3480156109a557600080fd5b50601c54610568906001600160a01b031681565b3480156109c557600080fd5b5061050660195481565b3480156109db57600080fd5b5061043e6109ea366004613819565b611c12565b3480156109fb57600080fd5b506104c5610a0a366004613724565b6001600160a01b031660009081526009602052604090205460ff1690565b348015610a3457600080fd5b50600254610568906001600160a01b031681565b348015610a5457600080fd5b506000546001600160a01b0316610568565b348015610a7257600080fd5b5061043e610a81366004613819565b611ca1565b348015610a9257600080fd5b5061047a611d70565b348015610aa757600080fd5b50600754610568906001600160a01b031681565b348015610ac757600080fd5b50601a54610506565b348015610adc57600080fd5b506104c5610aeb3660046137d4565b611d7f565b348015610afc57600080fd5b506104c5610b0b3660046137d4565b611dce565b348015610b1c57600080fd5b50601b54610506565b348015610b3157600080fd5b5061043e610b403660046137ff565b611ddb565b348015610b5157600080fd5b5061043e611e8b565b348015610b6657600080fd5b50610506610b7536600461375c565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b348015610bac57600080fd5b5061043e610bbb366004613724565b611f1a565b348015610bcc57600080fd5b5061043e610bdb366004613819565b611f83565b348015610bec57600080fd5b5061043e610bfb366004613819565b612079565b348015610c0c57600080fd5b5061050660185481565b348015610c2257600080fd5b5061043e610c31366004613724565b6120f6565b348015610c4257600080fd5b5061050660175481565b6000546001600160a01b03163314610c945760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601654811115610ce65760405162461bcd60e51b815260206004820152600f60248201527f6d617820666565206578636565647300000000000000000000000000000000006044820152606401610435565b60118190556040518181527ff9364b31c43785996b20464353ae9f7e7897fe40aec194789ee474fc1f6ff94f906020015b60405180910390a150565b6060600e8054610d3190613a10565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5d90613a10565b8015610daa5780601f10610d7f57610100808354040283529160200191610daa565b820191906000526020600020905b815481529060010190602001808311610d8d57829003601f168201915b5050505050905090565b6000546001600160a01b03163314610dfc5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b610e066001611ddb565b6002601155600a6013819055600b54610e2d916103e891610e279190612264565b90612222565b601955565b6000610e3f3384846122ff565b5060015b92915050565b6000546001600160a01b03163314610e915760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6007546001600160a01b031615610eea5760405162461bcd60e51b815260206004820152601c60248201527f43616e206f6e6c7920626520696e697469616c697a6564206f6e6365000000006044820152606401610435565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610f615760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b60178190556040518181527fb598e4b0c0e2229df4bc42611748ac844eec99eef4c949ea8b8556ccc0f8b85190602001610d17565b6000546001600160a01b03163314610fde5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b60078054911515600160a01b0260ff60a01b19909216919091179055565b6000611009848484612458565b61105b843361105685604051806060016040528060288152602001613a92602891396001600160a01b038a1660009081526006602090815260408083203384529091529020549190612936565b6122ff565b5060019392505050565b6000546001600160a01b031633146110ad5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601c8054821515760100000000000000000000000000000000000000000000027fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff9091161790556040517f3794234fa370c9f3b948dda3e3040530785b2ef1eb27dda3ffde478f4e2643c090610d1790831515815260200190565b6000546001600160a01b031633146111705760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f7358faaae54e6b58717da17b685c08d01c9a3ffd97b9dc3a1152bc2d87693c5790602001610d17565b6000600c548211156112455760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201527f65666c656374696f6e73000000000000000000000000000000000000000000006064820152608401610435565b600061124f612970565b905061125b8382612222565b9392505050565b6000546001600160a01b031633146112aa5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b03811660009081526009602052604090205460ff166113125760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610435565b60005b600a5481101561148557816001600160a01b0316600a828154811061134a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561147357600a8054611375906001906139f9565b8154811061139357634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600a80546001600160a01b0390921691839081106113cd57634e487b7160e01b600052603260045260246000fd5b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039485161790559184168152600582526040808220829055600990925220805460ff19169055600a80548061144057634e487b7160e01b600052603160045260246000fd5b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555050565b8061147d81613a4b565b915050611315565b5050565b3360008181526006602090815260408083206001600160a01b03871684529091528120549091610e3f9185906110569086612993565b3360008181526009602052604090205460ff16156115455760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201527f6869732066756e6374696f6e00000000000000000000000000000000000000006064820152608401610435565b6000611550836129f2565b505050506001600160a01b03841660009081526004602052604090205491925061157c91905082612a41565b6001600160a01b038316600090815260046020526040902055600c546115a29082612a41565b600c55600d546115b29084612993565b600d55505050565b6000546001600160a01b031633146116025760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6000600b5483111561167a5760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c79006044820152606401610435565b8161169957600061168a846129f2565b50939550610e43945050505050565b60006116a4846129f2565b50929550610e43945050505050565b6000546001600160a01b031633146116fb5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6117056000611ddb565b60006011819055601355600b54601955565b6000546001600160a01b0316331461175f5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b03811660009081526009602052604090205460ff16156117c85760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610435565b6001600160a01b03811660009081526004602052604090205415611822576001600160a01b038116600090815260046020526040902054611808906111cb565b6001600160a01b0382166000908152600560205260409020555b6001600160a01b0381166000818152600960205260408120805460ff19166001908117909155600a80549182018155918290527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801805473ffffffffffffffffffffffffffffffffffffffff191690921790915554601e10156118e75760405162461bcd60e51b815260206004820152601b60248201527f4578636c75646520726577617264206c697374206578636565647300000000006044820152606401610435565b50565b6000546001600160a01b031633146119325760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601c805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146119a95760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f74a9fe81925b68b4a6c7a7a36e2865be15c09ef2114ba0bcdf948e2da9ee029690602001610d17565b6000546001600160a01b03163314611a4c5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b47611a5f6000546001600160a01b031690565b6001600160a01b03166108fc829081150290604051600060405180830381858888f19350505050158015611485573d6000803e3d6000fd5b6001600160a01b03811660009081526009602052604081205460ff1615611ad457506001600160a01b031660009081526005602052604090205490565b6001600160a01b038216600090815260046020526040902054610e43906111cb565b6000546001600160a01b03163314611b3e5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b03163314611bdd5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b60188190556040518181527f1f222bf55ec7a4e4fb30903e189bc96e3df8cdade88e2121a5041478bd00999090602001610d17565b6000546001600160a01b03163314611c5a5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b611c6c81670de0b6b3a76400006139da565b601b8190556040519081527f44108e14866d6c56adc183f05baa27292cfedcac7e3bea756aa6b797db7e548390602001610d17565b6000546001600160a01b03163314611ce95760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601554811115611d3b5760405162461bcd60e51b815260206004820152600f60248201527f6d617820666565206578636565647300000000000000000000000000000000006044820152606401610435565b60138190556040518181527f719388fc3a1b723d13dcb4177507af9d05816637ff263302bc01b015f6b5413790602001610d17565b6060600f8054610d3190613a10565b6000610e3f338461105685604051806060016040528060258152602001613ada602591393360009081526006602090815260408083206001600160a01b038d1684529091529020549190612936565b6000610e3f338484612458565b6000546001600160a01b03163314611e235760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601c8054821515600160a81b027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff9091161790556040517f53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc15990610d1790831515815260200190565b6000546001600160a01b03163314611ed35760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b600754600160a81b900460ff1615611eea57600080fd5b600780547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b179055565b6000546001600160a01b03163314611f625760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6000546001600160a01b03163314611fcb5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b600081118015611fdd57506103e88111155b6120295760405162461bcd60e51b815260206004820152600e60248201527f696e76616c696420616d6f756e740000000000000000000000000000000000006044820152606401610435565b6120446103e8610e2783600b5461226490919063ffffffff16565b60198190556040519081527ffbe50b83bbe9d2e253bb0d67593a670a3e84cc2cc5735290718cf0ecb6a87e3e90602001610d17565b6000546001600160a01b031633146120c15760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b601a8190556040518181527f696b762bd40f10fc12f15397af542a8075b7a1b1968e9b80698ce9f5256cea3790602001610d17565b6000546001600160a01b0316331461213e5760405162461bcd60e51b81526020600482018190526024820152600080516020613aba8339815191526044820152606401610435565b6001600160a01b0381166121ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610435565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600061125b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612a83565b60008261227357506000610e43565b600061227f83856139da565b90508261228c85836139ba565b1461125b5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610435565b6001600160a01b03831661237a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610435565b6001600160a01b0382166123f65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610435565b6001600160a01b0383811660008181526006602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166124d45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610435565b6001600160a01b0382166125505760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610435565b600081116125c65760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d75737420626520677265617465722060448201527f7468616e207a65726f00000000000000000000000000000000000000000000006064820152608401610435565b6000546001600160a01b038481169116148015906125f257506000546001600160a01b03838116911614155b1561266f5760195481111561266f5760405162461bcd60e51b815260206004820152602860248201527f5472616e7366657220616d6f756e74206578636565647320746865206d61785460448201527f78416d6f756e742e0000000000000000000000000000000000000000000000006064820152608401610435565b601c546001600160a01b038481169116148015906126be57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316145b1561273b5760006126ee7f0000000000000000000000000000000000000000000000000000000000000000611a97565b1161273b5760405162461bcd60e51b815260206004820152600d60248201527f4e6f205065726d697373696f6e000000000000000000000000000000000000006044820152606401610435565b600754600160a01b900460ff16801561275e5750600754600160a81b900460ff16155b156127eb576007546040517f7e2f3afd0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015284811660248301526044820184905290911690637e2f3afd90606401600060405180830381600087803b1580156127d257600080fd5b505af11580156127e6573d6000803e3d6000fd5b505050505b60006127f630611a97565b601a54601c5491925082101590600160a01b900460ff161580156128235750601c54600160a81b900460ff165b801561286057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316145b156128d757801561287957601a54915061287982612ab1565b601c544790760100000000000000000000000000000000000000000000900460ff1680156128ae5750670de0b6b3a764000081115b156128d557601b548111156128c25750601b545b6128d56128d0826064612222565b612b49565b505b6001600160a01b03851660009081526008602052604090205460019060ff168061291957506001600160a01b03851660009081526008602052604090205460ff165b15612922575060005b61292e86868684612b7b565b505050505050565b6000818484111561295a5760405162461bcd60e51b815260040161043591906138d4565b50600061296784866139f9565b95945050505050565b600080600061297d612ca6565b909250905061298c8282612222565b9250505090565b6000806129a083856139a2565b90508381101561125b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610435565b6000806000806000806000806000612a098a612e60565b9250925092506000806000612a278d8686612a22612970565b612ea2565b919f909e50909c50959a5093985091965092945050505050565b600061125b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612936565b60008183612aa45760405162461bcd60e51b815260040161043591906138d4565b50600061296784866139ba565b601c805460ff60a01b1916600160a01b17905547612ace82612ef2565b6000612ada4783612a41565b600254601754601354929350612b11926001600160a01b0390921691612b0c9190612b06908690612222565b90612264565b6130f5565b600354601854601354612b37926001600160a01b031691612b0c91612b06908690612222565b5050601c805460ff60a01b1916905550565b601c805460ff60a01b1916600160a01b1790558015612b6b57612b6b81613130565b50601c805460ff60a01b19169055565b80612b8857612b88613347565b6001600160a01b03841660009081526009602052604090205460ff168015612bc957506001600160a01b03831660009081526009602052604090205460ff16155b15612bde57612bd9848484613375565b612c8a565b6001600160a01b03841660009081526009602052604090205460ff16158015612c1f57506001600160a01b03831660009081526009602052604090205460ff165b15612c2f57612bd984848461349b565b6001600160a01b03841660009081526009602052604090205460ff168015612c6f57506001600160a01b03831660009081526009602052604090205460ff165b15612c7f57612bd9848484613544565b612c8a8484846135b7565b80612ca057612ca0601254601155601454601355565b50505050565b600c54600b546000918291825b600a54811015612e30578260046000600a8481548110612ce357634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020541180612d5c57508160056000600a8481548110612d3557634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b15612d7257600c54600b54945094505050509091565b612dc660046000600a8481548110612d9a57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020548490612a41565b9250612e1c60056000600a8481548110612df057634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020548390612a41565b915080612e2881613a4b565b915050612cb3565b50600b54600c54612e4091612222565b821015612e5757600c54600b549350935050509091565b90939092509050565b600080600080612e6f856135fb565b90506000612e7c86613617565b90506000612e9482612e8e8986612a41565b90612a41565b979296509094509092505050565b6000808080612eb18886612264565b90506000612ebf8887612264565b90506000612ecd8888612264565b90506000612edf82612e8e8686612a41565b939b939a50919850919650505050505050565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110612f3557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015612fae57600080fd5b505afa158015612fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fe69190613740565b8160018151811061300757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526040517f791ac9470000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000009091169063791ac94790613085908590600090869030904290600401613966565b600060405180830381600087803b15801561309f57600080fd5b505af19250505080156130b0575060015b6130b8575050565b7f32cde87eb454f3a0b875ab23547023107cfad454363ec88ba5695e2c24aa52a782826040516130e9929190613945565b60405180910390a15050565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561312b573d6000803e3d6000fd5b505050565b6040805160028082526060820183526000926020830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156131aa57600080fd5b505afa1580156131be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131e29190613740565b8160008151811061320357634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061324557634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526040517fb6f9de950000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000009091169063b6f9de959084906132e39060009086907f000000000000000000000000000000000000000000000000000000000000000090429060040161389f565b6000604051808303818588803b1580156132fc57600080fd5b505af19350505050801561330e575060015b613316575050565b7f6fd378a9d8b7345c2e5b18229aaf1e39d32b177b501d0a0d26a0a858a23a962482826040516130e9929190613945565b6011541580156133575750601354155b1561335e57565b601180546012556013805460145560009182905555565b600080600080600080613387876129f2565b6001600160a01b038f16600090815260056020526040902054959b509399509197509550935091506133b99088612a41565b6001600160a01b038a166000908152600560209081526040808320939093556004905220546133e89087612a41565b6001600160a01b03808b1660009081526004602052604080822093909355908a16815220546134179086612993565b6001600160a01b03891660009081526004602052604090205561343981613633565b61344384836136eb565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161348891815260200190565b60405180910390a3505050505050505050565b6000806000806000806134ad876129f2565b6001600160a01b038f16600090815260046020526040902054959b509399509197509550935091506134df9087612a41565b6001600160a01b03808b16600090815260046020908152604080832094909455918b168152600590915220546135159084612993565b6001600160a01b0389166000908152600560209081526040808320939093556004905220546134179086612993565b600080600080600080613556876129f2565b6001600160a01b038f16600090815260056020526040902054959b509399509197509550935091506135889088612a41565b6001600160a01b038a166000908152600560209081526040808320939093556004905220546134df9087612a41565b6000806000806000806135c9876129f2565b6001600160a01b038f16600090815260046020526040902054959b509399509197509550935091506133e89087612a41565b6000610e436064610e276011548561226490919063ffffffff16565b6000610e436064610e276013548561226490919063ffffffff16565b600061363d612970565b9050600061364b8383612264565b306000908152600460205260409020549091506136689082612993565b3060009081526004602090815260408083209390935560099052205460ff16156136b757306000908152600560205260409020546136a69084612993565b306000908152600560205260409020555b604051838152309033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161244b565b600c546136f89083612a41565b600c55600d546137089082612993565b600d555050565b8035801515811461371f57600080fd5b919050565b600060208284031215613735578081fd5b813561125b81613a7c565b600060208284031215613751578081fd5b815161125b81613a7c565b6000806040838503121561376e578081fd5b823561377981613a7c565b9150602083013561378981613a7c565b809150509250929050565b6000806000606084860312156137a8578081fd5b83356137b381613a7c565b925060208401356137c381613a7c565b929592945050506040919091013590565b600080604083850312156137e6578182fd5b82356137f181613a7c565b946020939093013593505050565b600060208284031215613810578081fd5b61125b8261370f565b60006020828403121561382a578081fd5b5035919050565b60008060408385031215613843578182fd5b823591506138536020840161370f565b90509250929050565b6000815180845260208085019450808401835b838110156138945781516001600160a01b03168752958201959082019060010161386f565b509495945050505050565b8481526080602082015260006138b8608083018661385c565b6001600160a01b03949094166040830152506060015292915050565b6000602080835283518082850152825b81811015613900578581018301518582016040015282016138e4565b818111156139115783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b82815260406020820152600061395e604083018461385c565b949350505050565b85815284602082015260a06040820152600061398560a083018661385c565b6001600160a01b0394909416606083015250608001529392505050565b600082198211156139b5576139b5613a66565b500190565b6000826139d557634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156139f4576139f4613a66565b500290565b600082821015613a0b57613a0b613a66565b500390565b600181811c90821680613a2457607f821691505b60208210811415613a4557634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415613a5f57613a5f613a66565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146118e757600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220499b3ed0f2d0c2c81e710916efc3f21d1c85fe46bba62ada5b0260e33a4d84a564736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 476,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 478,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_previousOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1288,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "rewardAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address_payable"
      },
      {
        "astId": 1294,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "developmentAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address_payable"
      },
      {
        "astId": 1301,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_rOwned",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1305,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_tOwned",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1311,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_allowances",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1314,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "BP",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(BPContract)1270"
      },
      {
        "astId": 1316,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "bpEnabled",
        "offset": 20,
        "slot": "7",
        "type": "t_bool"
      },
      {
        "astId": 1319,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "BPDisabledForever",
        "offset": 21,
        "slot": "7",
        "type": "t_bool"
      },
      {
        "astId": 1323,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_isExcludedFromFee",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1327,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_isExcluded",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1330,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_excluded",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1344,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_tTotal",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1353,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_rTotal",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 1355,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_tFeeTotal",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 1358,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_name",
        "offset": 0,
        "slot": "14",
        "type": "t_string_storage"
      },
      {
        "astId": 1361,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_symbol",
        "offset": 0,
        "slot": "15",
        "type": "t_string_storage"
      },
      {
        "astId": 1364,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_decimals",
        "offset": 0,
        "slot": "16",
        "type": "t_uint8"
      },
      {
        "astId": 1367,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_taxFee",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 1370,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_previousTaxFee",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 1373,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_liquidityFee",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 1376,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_previousLiquidityFee",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 1415,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "MAX_LIQUIDITY_FEE",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      },
      {
        "astId": 1418,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "MAX_TAX_FEE",
        "offset": 0,
        "slot": "22",
        "type": "t_uint256"
      },
      {
        "astId": 1421,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "rewardDivisor",
        "offset": 0,
        "slot": "23",
        "type": "t_uint256"
      },
      {
        "astId": 1424,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "developmentDivisor",
        "offset": 0,
        "slot": "24",
        "type": "t_uint256"
      },
      {
        "astId": 1431,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_maxTxAmount",
        "offset": 0,
        "slot": "25",
        "type": "t_uint256"
      },
      {
        "astId": 1438,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "minimumTokensBeforeSwap",
        "offset": 0,
        "slot": "26",
        "type": "t_uint256"
      },
      {
        "astId": 1445,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "buyBackUpperLimit",
        "offset": 0,
        "slot": "27",
        "type": "t_uint256"
      },
      {
        "astId": 1447,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "_enabledAddLiquidityAddress",
        "offset": 0,
        "slot": "28",
        "type": "t_address"
      },
      {
        "astId": 1454,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "inSwapAndLiquify",
        "offset": 20,
        "slot": "28",
        "type": "t_bool"
      },
      {
        "astId": 1457,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "swapAndLiquifyEnabled",
        "offset": 21,
        "slot": "28",
        "type": "t_bool"
      },
      {
        "astId": 1460,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "buyBackEnabled",
        "offset": 22,
        "slot": "28",
        "type": "t_bool"
      },
      {
        "astId": 1463,
        "contract": "contracts/LemonHaze.sol:LemonHaze",
        "label": "MAX_INT",
        "offset": 0,
        "slot": "29",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(BPContract)1270": {
        "encoding": "inplace",
        "label": "contract BPContract",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}